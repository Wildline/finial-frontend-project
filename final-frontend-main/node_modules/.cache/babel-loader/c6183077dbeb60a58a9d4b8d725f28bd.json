{"ast":null,"code":"var _jsxFileName = \"/Users/wildline/Desktop/finial-frontend-project/final-frontend-main/src/components/views/AllEmployeesView.js\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { deleteEmployee } from \"../../store/actions/actionCreators\";\nimport { employee } from \"../../store/reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllEmployeesView = props => {\n  const {\n    employee,\n    editTask,\n    allTasks\n  } = props;\n  let assignedTasks = allTasks.filter(task => task.employeeId === employee.id);\n  let availableTasks = allTasks.filter(task => task.employeeId !== employee.id);\n\n  if (!props.allEmployees.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There are no employees.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.allEmployees.map(employee => {\n      let name = employee.firstname + \" \" + employee.lastname;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/employee/${employee.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteEmployee(employee.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: employee.department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, employee.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AllEmployeesView;\nAllEmployeesView.propTypes = {\n  allEmployees: PropTypes.array.isRequired\n};\nexport default AllEmployeesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllEmployeesView\");","map":{"version":3,"names":["PropTypes","Link","deleteEmployee","employee","AllEmployeesView","props","editTask","allTasks","assignedTasks","filter","task","employeeId","id","availableTasks","allEmployees","length","map","name","firstname","lastname","department","propTypes","array","isRequired"],"sources":["/Users/wildline/Desktop/finial-frontend-project/final-frontend-main/src/components/views/AllEmployeesView.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { deleteEmployee } from \"../../store/actions/actionCreators\";\nimport { employee } from \"../../store/reducers\";\n\nconst AllEmployeesView = (props) => {\n  const {employee, editTask, allTasks} = props;\n  let assignedTasks = allTasks.filter(task => task.employeeId===employee.id);\n  let availableTasks = allTasks.filter(task => task.employeeId!==employee.id);\n  \n  if (!props.allEmployees.length) {\n    return <div>There are no employees.</div>;\n  }\n\n  return (\n    <div>\n      {props.allEmployees.map((employee) => {\n        let name = employee.firstname + \" \" + employee.lastname;\n        return (\n          <div key={employee.id}>\n          <Link to={`/employee/${employee.id}`}>\n            <h1>{name}</h1>\n            <button onClick={() => deleteEmployee(employee.id)}>Delete</button>\n          </Link>\n          <p>{employee.department}</p>\n        </div>\n        );\n      })}\n    </div>\n\n\n    \n  );\n\n  \n\n  \n};\n\nAllEmployeesView.propTypes = {\n  allEmployees: PropTypes.array.isRequired,\n};\n\nexport default AllEmployeesView;"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,QAAT,QAAyB,sBAAzB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAClC,MAAM;IAACF,QAAD;IAAWG,QAAX;IAAqBC;EAArB,IAAiCF,KAAvC;EACA,IAAIG,aAAa,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAkBR,QAAQ,CAACS,EAAnD,CAApB;EACA,IAAIC,cAAc,GAAGN,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAkBR,QAAQ,CAACS,EAAnD,CAArB;;EAEA,IAAI,CAACP,KAAK,CAACS,YAAN,CAAmBC,MAAxB,EAAgC;IAC9B,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAA,UACGV,KAAK,CAACS,YAAN,CAAmBE,GAAnB,CAAwBb,QAAD,IAAc;MACpC,IAAIc,IAAI,GAAGd,QAAQ,CAACe,SAAT,GAAqB,GAArB,GAA2Bf,QAAQ,CAACgB,QAA/C;MACA,oBACE;QAAA,wBACA,QAAC,IAAD;UAAM,EAAE,EAAG,aAAYhB,QAAQ,CAACS,EAAG,EAAnC;UAAA,wBACE;YAAA,UAAKK;UAAL;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,OAAO,EAAE,MAAMf,cAAc,CAACC,QAAQ,CAACS,EAAV,CAArC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAKA;UAAA,UAAIT,QAAQ,CAACiB;QAAb;UAAA;UAAA;UAAA;QAAA,QALA;MAAA,GAAUjB,QAAQ,CAACS,EAAnB;QAAA;QAAA;QAAA;MAAA,QADF;IASD,CAXA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAhCD;;KAAMR,gB;AAkCNA,gBAAgB,CAACiB,SAAjB,GAA6B;EAC3BP,YAAY,EAAEd,SAAS,CAACsB,KAAV,CAAgBC;AADH,CAA7B;AAIA,eAAenB,gBAAf"},"metadata":{},"sourceType":"module"}