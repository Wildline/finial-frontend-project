{"ast":null,"code":"import * as ac from './actions/actionCreators';\n\nconst axios = require('axios'); //PATH (should be where your server is running)\n\n\nlet path = \"http://localhost:5001/api\"; // THUNKS\n//All employees\n\nexport const fetchAllEmployeesThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/employees`);\n    dispatch(ac.fetchAllEmployees(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single employees\n\nexport const fetchEmployeeThunk = id => async dispatch => {\n  // thunk creator would not an be async function \n  // if using Promise.then:\n  // return axios\n  //   .get(`${path}/api/instructors/${id}`)\n  //   .then((res) => res.data)\n  //   .then((instructor) => dispatch(ac.fetchInstructor(instructor)))\n  //   .catch((err) => console.log(err));\n  try {\n    let res = await axios.get(`${path}/employees/${id}`);\n    dispatch(ac.fetchEmployee(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteEmployeesThunk = employeeId => async dispatch => {\n  try {\n    await axios.delete(`${path}/employees/${employeeId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteEmployee(employeeId));\n  } catch (err) {\n    console.error(err);\n  }\n};\n/*\nexport const editEmThunk = task => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/tasks/${task.id}`, task);\n    //res.data is the updated course object\n    dispatch(ac.editTask(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n*/\n//All Tasks\n// did: editTask, deleteTask, fetchTask(s), addTask\n\nexport const fetchAllTasksThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks`);\n    dispatch(ac.fetchAllTasks(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addTaskThunk = task => async dispatch => {\n  // course = { title: \"CSCI 127\" }\n  try {\n    let res = await axios.post(`${path}/tasks`, task);\n    dispatch(ac.addTask(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteTasksThunk = taskId => async dispatch => {\n  try {\n    await axios.delete(`${path}/tasks/${taskId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteTask(taskId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editTaskThunk = task => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/tasks/${task.id}`, task); //res.data is the updated course object\n\n    dispatch(ac.editTask(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single course\n\nexport const fetchTaskThunk = id => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks/${id}`);\n    dispatch(ac.fetchTask(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","axios","require","path","fetchAllEmployeesThunk","dispatch","res","get","fetchAllEmployees","data","err","console","error","fetchEmployeeThunk","id","fetchEmployee","deleteEmployeesThunk","employeeId","delete","deleteEmployee","fetchAllTasksThunk","fetchAllTasks","addTaskThunk","task","post","addTask","deleteTasksThunk","taskId","deleteTask","editTaskThunk","put","editTask","fetchTaskThunk","fetchTask"],"sources":["/Users/wildline/Desktop/finial-frontend-project/final-frontend-main/src/store/thunks.js"],"sourcesContent":["import * as ac from './actions/actionCreators';\nconst axios = require('axios');\n\n//PATH (should be where your server is running)\nlet path = \"http://localhost:5001/api\";\n\n// THUNKS\n\n//All employees\nexport const fetchAllEmployeesThunk = () => async (dispatch) => {\n  try {\n    let res = await axios.get(`${path}/employees`);\n    dispatch(ac.fetchAllEmployees(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n//Single employees\nexport const fetchEmployeeThunk = (id) => async (dispatch) => {\n  // thunk creator would not an be async function \n  // if using Promise.then:\n  // return axios\n  //   .get(`${path}/api/instructors/${id}`)\n  //   .then((res) => res.data)\n  //   .then((instructor) => dispatch(ac.fetchInstructor(instructor)))\n  //   .catch((err) => console.log(err));\n  try {\n    let res = await axios.get(`${path}/employees/${id}`);\n    dispatch(ac.fetchEmployee(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const deleteEmployeesThunk = employeeId => async dispatch => {\n  try {\n    await axios.delete(`${path}/employees/${employeeId}`);\n    //delete succesful so change state with dispatch\n    dispatch(ac.deleteEmployee(employeeId));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n/*\nexport const editEmThunk = task => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/tasks/${task.id}`, task);\n    //res.data is the updated course object\n    dispatch(ac.editTask(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n*/\n\n\n\n\n//All Tasks\n// did: editTask, deleteTask, fetchTask(s), addTask\nexport const fetchAllTasksThunk = () => async (dispatch) => {\n  try {\n    let res = await axios.get(`${path}/tasks`);\n    dispatch(ac.fetchAllTasks(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const addTaskThunk = (task) => async (dispatch) => {\n  // course = { title: \"CSCI 127\" }\n  try {\n    let res = await axios.post(`${path}/tasks`, task);\n    dispatch(ac.addTask(res.data));\n    return res.data;\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const deleteTasksThunk = taskId => async dispatch => {\n  try {\n    await axios.delete(`${path}/tasks/${taskId}`);\n    //delete succesful so change state with dispatch\n    dispatch(ac.deleteTask(taskId));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const editTaskThunk = task => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/tasks/${task.id}`, task);\n    //res.data is the updated course object\n    dispatch(ac.editTask(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n//Single course\nexport const fetchTaskThunk = id => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks/${id}`);\n    dispatch(ac.fetchTask(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}