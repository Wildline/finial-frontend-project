{"ast":null,"code":"var _jsxFileName = \"/Users/wildline/Desktop/finial-frontend-project/final-frontend-main/src/components/views/InstructorView.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InstructorView = props => {\n  const {\n    instructor,\n    editTask,\n    allTasks\n  } = props;\n  let assignedTasks = allTasks.filter(task => task.instructorId === instructor.id);\n  let availableTasks = allTasks.filter(task => task.instructorId !== instructor.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: instructor.firstname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: instructor.department\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-evenly\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Assigned Tasks:\", assignedTasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/course/${course.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: course.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTask({\n                id: course.id,\n                instructorId: null\n              }),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Available Tasks:\", availableTasks.map(course => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/task/${task.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTask({\n                id: task.id,\n                instructorId: instructor.id\n              }),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InstructorView;\nexport default InstructorView;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstructorView\");","map":{"version":3,"names":["Link","InstructorView","props","instructor","editTask","allTasks","assignedTasks","filter","task","instructorId","id","availableTasks","firstname","department","display","flexDirection","justifyContent","map","course","title"],"sources":["/Users/wildline/Desktop/finial-frontend-project/final-frontend-main/src/components/views/InstructorView.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\n\nconst InstructorView = (props) => {\n  const {instructor, editTask, allTasks} = props;\n  let assignedTasks = allTasks.filter(task => task.instructorId===instructor.id);\n  let availableTasks = allTasks.filter(task => task.instructorId!==instructor.id);\n  \n  return (\n    <div>      \n      <h1>{instructor.firstname}</h1>\n      <h3>{instructor.department}</h3>\n      <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-evenly\"}}>\n        <div>Assigned Tasks:\n        {assignedTasks.map( task => {\n          return (\n            <div key={task.id}>\n            <Link to={`/course/${course.id}`}>\n              <h4>{course.title}</h4>\n            </Link>\n            <button onClick={() => editTask({id:course.id, instructorId: null})}>x</button>\n            </div>\n          );\n        })}</div>\n        <div>Available Tasks:\n        {availableTasks.map( course => {\n          return (\n            <div key={task.id}>\n            <Link to={`/task/${task.id}`}>\n              <h4>{task.title}</h4>\n            </Link>\n            <button onClick={() => editTask({id:task.id, instructorId: instructor.id})}>+</button>\n            </div>\n          );\n        })}</div>\n\n      </div>\n\n  \n    </div>\n  );\n\n};\n\nexport default InstructorView;"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAChC,MAAM;IAACC,UAAD;IAAaC,QAAb;IAAuBC;EAAvB,IAAmCH,KAAzC;EACA,IAAII,aAAa,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,YAAL,KAAoBN,UAAU,CAACO,EAAvD,CAApB;EACA,IAAIC,cAAc,GAAGN,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,YAAL,KAAoBN,UAAU,CAACO,EAAvD,CAArB;EAEA,oBACE;IAAA,wBACE;MAAA,UAAKP,UAAU,CAACS;IAAhB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKT,UAAU,CAACU;IAAhB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,KAAK,EAAE;QAACC,OAAO,EAAE,MAAV;QAAkBC,aAAa,EAAE,KAAjC;QAAwCC,cAAc,EAAE;MAAxD,CAAZ;MAAA,wBACE;QAAA,8BACCV,aAAa,CAACW,GAAd,CAAmBT,IAAI,IAAI;UAC1B,oBACE;YAAA,wBACA,QAAC,IAAD;cAAM,EAAE,EAAG,WAAUU,MAAM,CAACR,EAAG,EAA/B;cAAA,uBACE;gBAAA,UAAKQ,MAAM,CAACC;cAAZ;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADA,eAIA;cAAQ,OAAO,EAAE,MAAMf,QAAQ,CAAC;gBAACM,EAAE,EAACQ,MAAM,CAACR,EAAX;gBAAeD,YAAY,EAAE;cAA7B,CAAD,CAA/B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJA;UAAA,GAAUD,IAAI,CAACE,EAAf;YAAA;YAAA;YAAA;UAAA,QADF;QAQD,CATA,CADD;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QAAA,+BACCC,cAAc,CAACM,GAAf,CAAoBC,MAAM,IAAI;UAC7B,oBACE;YAAA,wBACA,QAAC,IAAD;cAAM,EAAE,EAAG,SAAQV,IAAI,CAACE,EAAG,EAA3B;cAAA,uBACE;gBAAA,UAAKF,IAAI,CAACW;cAAV;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADA,eAIA;cAAQ,OAAO,EAAE,MAAMf,QAAQ,CAAC;gBAACM,EAAE,EAACF,IAAI,CAACE,EAAT;gBAAaD,YAAY,EAAEN,UAAU,CAACO;cAAtC,CAAD,CAA/B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJA;UAAA,GAAUF,IAAI,CAACE,EAAf;YAAA;YAAA;YAAA;UAAA,QADF;QAQD,CATA,CADD;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CAvCD;;KAAMT,c;AAyCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}